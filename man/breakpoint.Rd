% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmbreak.R
\name{lmBreak}
\alias{lmBreak}
\alias{lmbreak}
\title{Find One or Two Breakpoints}
\usage{
lmbreak(
  formula,
  data,
  n.iter = 25,
  tol = 0.001,
  enforce.continuity = TRUE,
  trace = FALSE,
  nQuantile.init = NULL,
  digits = -log10(tol)
)
}
\arguments{
\item{formula}{a formula where the breakpoint variable appears on the right hand side
with an argument pattern specifying the number of breakpoints and possible constrains. See detail section.}

\item{n.iter}{[integer, >0] the maximum number of iterations used to estimates the breakpoints.}

\item{tol}{[numeric, >0] the maximum accpetable difference between two consecutive estimates of the breakpoints.
When reached, the estimation algorithm stops.}

\item{trace}{[0,1,2] trace the execution of the function.}

\item{digits}{[integer] how to round values that are displayed in the terminal.}

\item{pattern}{[vector of character] the number and type of breakpoints to be search. 0 indicates a flat line.}

\item{n.init}{[integer, >0] the number of quantiles used to generate initialisation points.
Only active when breakpoint.init is \code{NULL}.}
}
\description{
Find one or two breakpoints.
}
\details{
\strong{formula}: \code{Y~bp(X, pattern = "111")} indicates a two breakpoints model without constrains (one intercept and three slopes).
 \code{Y~bp(X, pattern = "101")} indicates a two breakpoints model with a plateau (one intercept and two slopes).
}
\examples{

####  simulate data ####
set.seed(10)
df1 <- simBreak(10, breakpoint = c(0,1,3,4), slope = c(1,0,-1), sigma = 0.1)
df1$gender <- df1$id \%\% 2

#### fit breakpoint regression
e.lmbreak <- lmbreak(Y ~ bp(X, pattern = "101"), data = df1)
e.lmbreak <- lmbreak(Y ~ gender + bp(X, pattern = "101"), data = df1, trace = 1)
e.lmbreak <- lmbreak(Y ~ bp(X, "101"), data = df1)

e.lmbreak <- lmbreak(Y ~ gender + bp(X, "111"), data = df1)
e.lmbreak <- lmbreak(Y ~ gender + bp(X, "101"), data = df1)

BIC(resBP)
gg + geom_line(data = resBP$BP101$fit, aes(y = fit))

#### example from the package segmented
if(require(segmented)){
GS <- segmented(e.lm, psi = c(1,2))


cbind(value = resBP$BP111$breakpoint,
      se = resBP$BP111$breakpoint.se)
GS$psi
}

if(require(gridExtra)){
  autoplot(resBP)
}
 
}
\references{
Muggeo, V. M. R. Estimating regression models with unknown break-points.
Statistics in medicine 2003; 22:3055-3071.
}
