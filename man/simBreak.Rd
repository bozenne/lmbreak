% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simBreak.R
\name{simBreak}
\alias{simBreak}
\title{Simulate Outcome Follow a Breakpoint Model}
\usage{
simBreak(n, breakpoint, slope, sigma = 1, rdist.X = stats::runif, seed = NULL)
}
\arguments{
\item{n}{[integer,>0] number of individuals for which a broken line should be simulated.
Can contain a second element to indicate the number of observations per individual.}

\item{breakpoint}{[numeric vector] the position of the breakpoints.
Its last element indicates the largest possible X value.}

\item{slope}{[numeric vector] the regression coefficient relative to each broken line.
Should have length the length of argument breakpoint minus one.}

\item{sigma}{[numeric vector] the residual standard deviation of the outcome relative to each broken line.
Should have length the length of argument breakpoint minus one.}

\item{rdist.X}{[numeric vector or function ] X values for each individuals or function used to generate the X values for each individual.}

\item{seed}{[integer, >0] Random number generator (RNG) state used when starting imputation. If NULL no state is set.}
}
\description{
Simulate an outcome variable (Y) related to a covariate (X) according to broken lines
}
\examples{
#### different timepoints for each individual ####
df1 <- simBreak(10, breakpoint = c(0,1,3,4), slope = c(1,0,-1), sigma = 0.1)
if(require(ggplot2)){
ggplot(df1, aes(x = X, y = Y, group = id)) + geom_point() + geom_line()
}

## with more measurements per individual
df1.bis <- simBreak(c(10,50), breakpoint = c(0,1,3,4), slope = c(1,0,-1), sigma = 0.1)
if(require(ggplot2)){
ggplot(df1.bis, aes(x = X, y = Y, group = id)) + geom_point() + geom_line()
}

#### same timepoint for all individuals ###
df2 <- simBreak(10, breakpoint = c(0,1,3,4), slope = c(1,0,-1),
                rdist.X = seq(0,4,0.5), sigma = 0.1)
if(require(ggplot2)){
ggplot(df2, aes(x = X, y = Y, group = id)) + geom_point() + geom_line()
}

}
